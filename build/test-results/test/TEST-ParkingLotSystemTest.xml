<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ParkingLotSystemTest" tests="32" skipped="0" failures="0" errors="0" timestamp="2020-05-28T14:16:43" hostname="DESKTOP-0I0IS0O" time="0.117">
  <properties/>
  <testcase name="givenParkingLotSystem_WhenVehicleFound_ShouldReturnVehicleSlot" classname="ParkingLotSystemTest" time="0.04"/>
  <testcase name="givenParkingLot_WhenSpaceAvailableAfterFull_ThenShouldReturnTrue" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenDriverTypeIsHandicap_ShouldReturnNearestLot" classname="ParkingLotSystemTest" time="0.005"/>
  <testcase name="givenParkingLotSystem_WhenVehiclePark_ThenShouldParkVehicleEvenly" classname="ParkingLotSystemTest" time="0.002"/>
  <testcase name="givenParkingLot_WhenParkedVehicleIsUnParked_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.004"/>
  <testcase name="givenParkingLot_WhenFull_ThenShouldThrowException" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLot_WhenFull_ThenShouldInformOwner" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLot_WhenVehicleIsNotParked_ThenReturnException" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLotSystem_WhenVehicleParked_ThenShouldLocateBMWCar" classname="ParkingLotSystemTest" time="0.006"/>
  <testcase name="givenParkingLot_CheckVehicleIsNotPresent_ThenShouldThrowException" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLot_WhenUnParkedVehicleWhichIsNotParked_ThenReturnFalse" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLotSystem_WhenLotsAdded_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLotSystem_WhenVehicleParked_ThenShouldReturnLocationOfWhiteCar" classname="ParkingLotSystemTest" time="0.004"/>
  <testcase name="givenParkingSlotSystem_WhenParkingCapacitySet_ShouldReturnCapacity" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLot_WhenVehicleIsParked_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLotSystem_WhenAddLot_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLotSystem_WhenVehicleParked_ThenShouldLocateBlueToyotoCar" classname="ParkingLotSystemTest" time="0.002"/>
  <testcase name="givenParkingLotSystem_WhenEvenlyDistrubuated_ThenUParkVehicle" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLotIsFull_WhenVehicleIsParked_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLot_ShouldReturnAttendant" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLotSystem_WhenCarColourIsBle_ThenReturnLot" classname="ParkingLotSystemTest" time="0.022"/>
  <testcase name="givenParkingLot_WhenVehicleParkOnLotPosition_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLotSystem_ShouldReturnParkedVechicleFromLast30Min" classname="ParkingLotSystemTest" time="0.002"/>
  <testcase name="givenParkingLotSlot_WhenCarCome_ThenShouldAttenderParkCar" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenDriver_WhenHandicap_ThenShouldParkVehicleAtNearestPlace" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLotCapacity2_ShouldBeAbleToPark2Vehicles_ThenShouldInformOwner" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLot_WhenHavingSpace_ThenShouldInformAirportSecurity" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLot_WhenLargeVehicleParked_ThenShouldReturnTrue" classname="ParkingLotSystemTest" time="0.003"/>
  <testcase name="givenParkingLot_WhenFull_ThenShouldInformAirportSecurity" classname="ParkingLotSystemTest" time="0.001"/>
  <testcase name="givenParkingLot_WhenTimeIsSet_ThenReturnTrue" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLot_WhenParkingFull_ThenAttenderShouldThrowException" classname="ParkingLotSystemTest" time="0.0"/>
  <testcase name="givenParkingLot_WhenAttenderNotAvailable_ThenThrowException" classname="ParkingLotSystemTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[com.parkinglotsystem.exception.ParkingLotSystemException: PARKING_IS_FULL
	at com.parkinglotsystem.ParkingLot.getParkingSlot(ParkingLot.java:96)
	at com.parkinglotsystem.ParkingLot.parkVehicle(ParkingLot.java:47)
	at ParkingLotSystemTest.givenParkingLotSystem_WhenCarColourIsBle_ThenReturnLot(ParkingLotSystemTest.java:491)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></system-err>
</testsuite>
